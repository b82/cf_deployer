---
AWSTemplateFormatVersion: "2010-09-09"
Description: |
  VPC template


################################################################################
#                                  Metadata                                    #
################################################################################
Metadata:

  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label: {default: 'Required parameters'}
        Parameters:
          - VPCId
          - VPCCIDR
          - SubnetPrivateAId
          - SubnetPrivateBId
          - SubnetPrivateCId
          - EC2WordpressSecurityGroupId


################################################################################
#                               Parameters                                     #
################################################################################
Parameters:

  VPCId:
    Type: String
    Description: "VPC ID"

  SubnetPrivateAId:
    Type: String
    Description: "Subnet private A id"

  SubnetPrivateBId:
    Type: String
    Description: "Subnet private B id"

  SubnetPrivateCId:
    Type: String
    Description: "Subnet private C id"

  VPCCIDR:
    Type: String
    NoEcho: True
    Description: "VPC CIDR"

  EC2WordpressSecurityGroupId:
    Type: String
    Description: "EC2 Wordpress Security Group Id"


################################################################################
#                               Resources                                      #
################################################################################
Resources:

  # MySQL RDS
  MySQLRDS:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceClass: db.t3.micro
      AvailabilityZone: !Select
        - "0"
        - Fn::GetAZs: !Ref "AWS::Region"
      DBInstanceIdentifier: "wordpress"
      DBName: "wordpress"
      DBSubnetGroupName: !Ref MySQLRDSSubnetGroup
      Engine: MySQL
      EngineVersion: "5.7.22"
      MasterUsername: "admin"
      MasterUserPassword: "password1111"
      AllocatedStorage: "10"
      VPCSecurityGroups:
        - !GetAtt MySQLRDSSecurityGroup.GroupId

  # MySQL RDS SubnetGroup
  MySQLRDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "MySQL RDS Subnet Group"
      DBSubnetGroupName: "mysql-rds"
      SubnetIds:
        - Ref: SubnetPrivateAId
        - Ref: SubnetPrivateBId
        - Ref: SubnetPrivateCId
      Tags:
        - Key: Name
          Value: MySQL-RDS
        - Key: Env
          Value: deployer-SmartBackup-Demo

  # MySQL RDS private security group
  MySQLRDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "MySQL Server security group"
      GroupName: "mysql-rds"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2WordpressSecurityGroupId
          Description: !Sub "Allow traffic from ${EC2WordpressSecurityGroupId}"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref EC2WordpressSecurityGroupId
          Description: !Sub "Allow SSH from ${EC2WordpressSecurityGroupId}"

  # Oracle RDS
  OracleRDS:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceClass: db.t3.small
      AvailabilityZone: !Select
        - "0"
        - Fn::GetAZs: !Ref "AWS::Region"
      DBInstanceIdentifier: "oracle"
      DBName: "oracle"
      DBSubnetGroupName: !Ref OracleRDSSubnetGroup
      Engine: "oracle-se2"
      EngineVersion: "19.0.0.0.ru-2019-07.rur-2019-07.r1"
      LicenseModel: "license-included"
      MasterUsername: "adminOracle"
      MasterUserPassword: "password2222"
      AllocatedStorage: "20"
      VPCSecurityGroups:
        - !GetAtt OracleRDSSecurityGroup.GroupId

  # Oracle RDS SubnetGroup
  OracleRDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Oracle RDS Subnet Group"
      DBSubnetGroupName: "oracle-rds"
      SubnetIds:
        - Ref: SubnetPrivateAId
        - Ref: SubnetPrivateBId
        - Ref: SubnetPrivateCId
      Tags:
        - Key: Name
          Value: "oracle-rds"
        - Key: Env
          Value: deployer-SmartBackup-Demo

  # Oracle RDS private security group
  OracleRDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Oracle Server security group"
      GroupName: "oracle"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1521
          ToPort: 1521
          CidrIp: 185.90.68.114/32

  # AuroraDb Cluster
  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    Properties:
      DBClusterParameterGroupName: !Ref AuroraDBClusterParameterGroup
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      Engine: "aurora-mysql"
      MasterUsername: "adminAurora"
      MasterUserPassword: "password3333"
      DatabaseName: "aurora"
      DBClusterIdentifier: "aurora-cluster-1"
      VpcSecurityGroupIds:
        - !GetAtt AuroraDBSecurityGroup.GroupId
    DependsOn: AuroraDBSubnetGroup

  # AuroraDB Cluster ParameterGroup
  AuroraDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: "Aurora Cluster Parameter Group"
      Family: aurora-mysql5.7
      Parameters:
        time_zone: Europe/Dublin

  # Aurora Instance - 1
  AuroraDBInstance1:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceClass: db.t2.small
      AvailabilityZone: !Select
        - "0"
        - Fn::GetAZs: !Ref "AWS::Region"
      DBInstanceIdentifier: "aurora-db-instance-1"
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      Engine: "aurora-mysql"

  # Aurora SubnetGroup
  AuroraDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "AuroraDB Subnet Group"
      DBSubnetGroupName: "aurora-rds"
      SubnetIds:
        - Ref: SubnetPrivateAId
        - Ref: SubnetPrivateBId
        - Ref: SubnetPrivateCId
      Tags:
        - Key: Name
          Value: "aurora-rds"
        - Key: Env
          Value: deployer-SmartBackup-Demo

  # Aurora RDS private security group
  AuroraDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Aurora DB security group"
      GroupName: "aurora-db"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 185.90.68.114/32


################################################################################
#                                   Outputs                                    #
################################################################################
Outputs:

  MySQLRDSEndpoint:
    Description: "MySQL RDS endpoint address"
    Value: !GetAtt MySQLRDS.Endpoint.Address
